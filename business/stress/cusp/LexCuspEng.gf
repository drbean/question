instance LexCuspEng of LexCusp = open SyntaxEng, ParadigmsEng, Prelude, IrregEng in {

oper
  a_Det	= aSg_Det;
  zero_Det	= aPl_Det;
  the_Det	= theSg_Det;
  thePlural_Det	= thePl_Det;

  who_WH	= whoSg_IP;
  what_WH	= whatSg_IP;

  about_prep = mkPrep "about";
  of_prep	= possess_Prep;
  part_prep	= part_Prep;
  for_prep = for_Prep;
  in_prep = in_Prep;
  on_prep = mkPrep "on";
  at_prep = mkPrep "at";
  over_prep = mkPrep "over";
  to_prep = mkPrep "to";
  up_prep = mkPrep "up";
  with_prep = mkPrep "with";

  yes_Utt	= SyntaxEng.yes_Utt;
  no_Utt	= SyntaxEng.no_Utt;
  no_answer_Utt = ss "No answer";

  become_V2	= mkV2 (IrregEng.become_V);
  can_VV	= SyntaxEng.can_VV;
  get_V2	= mkV2 "get";
  know_V	= IrregEng.know_V;
  know_V2	= mkV2 know_V;
  know_VS	= mkVS know_V;
  like_V2	= mkV2 "like";
  -- need_VV = infVV (mkV "need") ;
  need_V2 = mkV2 (mkV "need");
  prove_V2	= mkV2 "prove";
  say_VS	= mkVS IrregEng.say_V;
  see_V2	= mkV2 IrregEng.see_V;
  slow_down_V	= partV (mkV "slow") "down";
  start_ing_VV = ingVV (mkV "start");
  take_V2 = mkV2 (IrregEng.take_V);
  tell_V2S = mkV2S IrregEng.tell_V noPrep;
  think_VS = mkVS (IrregEng.think_V);
  work_V	 = mkV "work";

  abdicate_V	= mkV "abdicate";
  agree_V	= mkV "agree";
  allow_V	= mkV "allow";
  appear_V	= mkV "appear";
  base_V	= mkV "base";
  boost_V	= mkV "boost";
  call_V	= mkV "call";
  cause_V	= mkV "cause";
  consult_V	= mkV2 "consult" with_prep;
  consider_V	= mkV "consider";
  cope_V	= mkV2 "cope" with_prep;
  deal_V	= mkV2 "deal" with_prep;
  enable_V	= mkV "enable";
  encourage_V	= mkV "encourage";
  facilitate_V	= mkV "facilitate";
  feel_V	= mkV "feel";
  -- find_V	= IrregEng.find_V;
  get_V	= mkV "get";
  give_V	= IrregEng.give_V;
  happen_V	= mkV "happen";
  have_V	= mkV "have";
  help_V	= mkV "help";
  identify_V	= mkV "identify";
  investigate_V	= mkV "investigate";
  listen_V	= mkV "listen";
  look_V	= mkV "look";
  make_V	= mkV "make";
  occur_V	= mkV "occur";
  offer_V	= mkV "offer";
  pick_V	= mkV "pick";
  prevent_V	= mkV "prevent";
  provide_V	= mkV "provide";
  raise_V	= mkV "raise";
  receive_V	= mkV "receive";
  reduce_V	= mkV "reduce";
  report_V	= mkV "report";
  suggest_V	= mkV "suggest";
  stand_V	= mkV "stand";
  take_V	= mkV "take";
  talk_V	= mkV "talk";
  tend_V	= mkV "tend";
  think_V	= mkV "think";
  train_V	= mkV "train";
  use_V	= mkV "use";
  work_V	= mkV "work";

  assertive_A	= mkA "assertive";
  bad_A	= mkA "bad" "worse" "worst" "badly";
  best_placed_A	= mkA "best-placed";
  brief_A	= mkA "brief";
  common_A	= mkA "common";
  critically_important_A	= mkA "critically-important";
  day_to_day_A	= mkA "day-to-day";
  difficult_A	= mkA "difficult";
  effective_A	= mkA "effective";
  face_to_face_A	= mkA "face-to-face";
  good_A	= mkA "good" "better" "best" "well";
  helpless_A	= mkA "helpless";
  high_A	= mkA "high";
  latter_A	= mkA "latter";
  little_A	= mkA "little";
  managerial_A	= mkA "managerial";
  main_A	= mkA "main";
  more_A	= mkA "more";
  most_A	= mkA "most";
  other_A	= mkA "other";
  own_A	= mkA "own";
  particular_A	= mkA "particular";
  poor_A	= mkA "poor";
  practical_A	= mkA "practical";
  psychological_A	= mkA "psychological";
  severe_A	= mkA "severe";
  simple_A	= mkA "simple";
  social_A	= mkA "social";
  stressful_A	= mkA "stressful";
  structured_A	= mkA "structured";
  three_A	= mkA "three";
  timely_A	= mkA "timely";
  two_way_A	= mkA "two-way";
  unsupported_A	= mkA "unsupported";
  useful_A	= mkA "useful";
  vulnerable_A	= mkA "vulnerable";
  wrong_A	= mkA "wrong";


  action_N	= mkN "action";
  approachability_N	= mkN "approachability";
  area_N	= mkN "area";
  assessment_N	= mkN "assessment";
  awareness_N	= mkN "awareness";
  business_N	= mkN "business";
  cause_N	= mkN "cause";
  characteristic_N	= mkN "characteristic";
  climate_N	= mkN "working climate";
  combination_N	= mkN "combination";
  comment_N	= mkN "comment";
  communication_N	= mkN "communication";
  company_N	= mkN "company";
  consultation_N	= mkN "consultation";
  control_over_N	= mkN "control";
  delegation_N	= mkN "delegation";
  depression_N	= mkN "depression";
  difference_N	= mkN "difference";
  difficulty_N	= mkN "difficulty";
  element_N	= mkN "element";
  example_N	= mkN "example";
  experience_N	= mkN "experience";
  feeling_N	= mkN "feeling";
  flexibility_N	= mkN "flexibility";
  framework_N	= mkN "framework";
  group_N	= mkN "group";
  health_N	= mkN "health";
  hotspot_N	= mkN "hotspot";
  idea_N	= mkN "idea";
  individual_N	= mkN "individual";
  key_N	= mkN "key";
  kind_N	= mkN "kind";
  lack_N	= mkN "lack";
  level_N	= mkN "level";
  luck_N	= mkN "luck";
  management_N	= mkN "management";
  manager_N	= mkN "manager";
  meeting_N	= mkN "meeting";
  message_N	= mkN "message";
  mind_N	= mkN "mind";
  minute_N	= mkN "minute";
  model_N	= mkN "model";
  one_N	= mkN "one";
  openness_N	= mkN "openness";
  option_N	= mkN "option";
  overview_N	= mkN "overview";
  people_N	= mkN "person" "people";
  performance_N	= mkN "performance";
  placement_N	= mkN "placement";
  plan_N	= mkN "plan";
  position_N	= mkN "position";
  problem_N	= mkN "problem";
  responsibility_N	= mkN "responsibility";
  risk_N	= mkN "risk";
  sense_of_N	= mkN "sense";
  situation_N	= mkN "situation";
  skill_N	= mkN "skill";
  staff_N	= mkN "staff";
  strategy_N	= mkN "strategy";
  study_N	= mkN "study";
  thing_N	= mkN "thing";
  time_N	= mkN "time";
  truth_N	= mkN "truth";
  way_N	= mkN "way";
  work_N	= mkN "work";
  workload_N	= mkN "workload";


  bradshaw_N	= mkN masculine (mkN "Bradshaw");
  c_N	= mkN nonhuman (mkN "C");
  control_N	= mkN nonhuman (mkN "control");
  cusp_N	= mkN nonhuman (mkN "CUSP");
  gourlay_N	= mkN feminine (mkN "Gourlay");
  in_equilibrium_N	= mkN nonhuman (mkN "In Equilibrium");
  men_N	= mkN masculine (mkN nonExist "men");
  p_N	= mkN nonhuman (mkN "P");
  pressure_N	= mkN nonhuman (mkN "pressure");
  s_N	= mkN nonhuman (mkN "S");
  stress_N	= mkN nonhuman (mkN "stress");
  support_N	= mkN nonhuman (mkN "support");
  u_N	= mkN nonhuman (mkN "U");
  uncertainty_N	= mkN nonhuman (mkN "uncertainty");
  women_N	= mkN feminine (mkN nonExist "women");

}

-- vim: set ts=8 sts=2 sw=2 noet:
